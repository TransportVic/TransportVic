-
    function getTimingsDifference(a, b) {
        let d = new Date(Math.abs(a - b));
        return {minutes: d.getUTCMinutes() + d.getUTCHours() * 60, seconds: d.getUTCSeconds()}
    };    

-
    let services = Object.keys(timings);
    service = services.sort((a, b) => a - b);

for serviceNumber in services
    - let destinations = Object.keys(timings[serviceNumber]);
    for destinationName in destinations.sort((a, b) => a.length - b.length)
        - let destinationTimings = timings[serviceNumber][destinationName];
        div.busService
            a(class='busServiceNumber ' + destinationTimings[0].operators[0].toLowerCase().replace(/[^\w]/g, '-'))
                span=destinationTimings[0].serviceNumber
                
                if destinationTimings[0].serviceVariant
                    span=destinationTimings[0].serviceVariant
                    
            a.destination
                span Towards
                span=destinationName
                
            div.timings
                for i in Array(4 - destinationTimings.slice(0, 4).length)
                    div.busArrival(style='display: none')
                for timing in destinationTimings.slice(0, 4)
                    -
                        let headwayDevianceClass = 'unknown'
                        
                        if (timing.headwayDeviance > 1.5)
                            headwayDevianceClass = 'early'
                        else if (timing.headwayDeviance < -1.5)
                            headwayDevianceClass = 'late'
                        else if (timing.headwayDeviance !== null)
                            headwayDevianceClass = 'on-time'
                    
                    div(class='busArrival ' + headwayDevianceClass)
                        - let timeToArrival = getTimingsDifference(timing.arrivalTime, +new Date());
                        if timeToArrival.minutes == 0
                            span Arr
                        else
                            span=timeToArrival.minutes
