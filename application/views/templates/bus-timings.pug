-
    function getTimingsDifference(a, b) {
        let d = new Date(Math.abs(a - b));
        return {minutes: d.getUTCMinutes() + d.getUTCHours() * 60, seconds: d.getUTCSeconds()}
    };
    
    let services = Object.keys(timings);
    service = services.sort((a, b) => a - b);
    
    function flattenDest(dest) {
        return dest.replace(/[^\w]/g, '-').replace(/--+/g, '-').replace(/^-*/, '').replace(/-*$/, '').toLowerCase();
    }

for serviceNumber in services
    - let destinations = Object.keys(timings[serviceNumber]);
    for destinationName in destinations.sort((a, b) => a.length - b.length)
        - let destinationTimings = timings[serviceNumber][destinationName];
        - let operatorCSSClass = destinationTimings[0].operators[0].toLowerCase().replace(/[^\w]/g, '-');
        div.busService
            a(class='busServiceNumber ' + operatorCSSClass href=`/bus/metro/${serviceNumber}/${flattenDest(destinationName)}`)
                span=destinationTimings[0].serviceNumber
                
                if destinationTimings[0].serviceVariant
                    span=destinationTimings[0].serviceVariant
            a(href=`/bus/timings/${destinationTimings[0].destination.cleanSuburb}/${destinationTimings[0].destination.cleanBusStopName}`).destination
                span Towards
                span=destinationName
                
            div.timings
                for i in Array(4 - destinationTimings.slice(0, 4).length)
                    div.busArrival(style='display: none')
                for timing in destinationTimings.slice(0, 4)
                    -
                        let headwayDevianceClass = 'unknown'
                        
                        if (timing.headwayDeviance > 90)
                            headwayDevianceClass = 'early'
                        else if (timing.headwayDeviance < -90)
                            headwayDevianceClass = 'late'
                        else if (timing.headwayDeviance !== null)
                            headwayDevianceClass = 'on-time'
                    
                    a(class='busArrival ' + headwayDevianceClass href=`/bus/runs/${timing.runID}/${busStop.cleanSuburb}/${busStop.cleanBusStopName}`)
                        - let timeToArrival = getTimingsDifference(timing.arrivalTime, +new Date());
                        if timeToArrival.minutes == 0
                            span Arr
                        else
                            span=timeToArrival.minutes
                        
                        if Math.abs(timing.headwayDeviance) > 90
                            -
                                let minutes = Math.floor(Math.abs(timing.headwayDeviance) / 60);
                                let seconds = [0].concat([...(Math.abs(timing.headwayDeviance) % 60).toFixed(0)]).slice(-2).join('');
                                
                            span=minutes + ':' + seconds
                                
                        
