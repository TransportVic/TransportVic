-
    function getTimingsDifference(a, b) {
        let d = new Date(Math.abs(a - b));
        return {minutes: d.getUTCMinutes() + d.getUTCHours() * 60, seconds: d.getUTCSeconds()}
    };
    
div#filterBar
    input(aria-label='Destination or Platform Number' placeholder='Destination or Platform Number')#filter
    
for timing in timings
    div.trainService(destination=timing.destination.toLowerCase() platform=timing.platform)
        span(class='trainPlatformData ' + timing.trainLine.toLowerCase().replace(/[ &]/g, '-').replace(/--+/g, '-') + '-line')
            span Platform
            span=timing.platform

        a(href=`/metro/timings/${timing.destination.toLowerCase().replace(/ /g, '-')}`).destination
            span=timing.trainLine + ' Line Towards'
            if ['southern cross', 'parliament', 'flagstaff', 'melbourne central'].includes(timing.destination.toLowerCase())
                span City Loop
            else
                span=timing.destination
            if timing.runData.runID && timing.runData.upService
                if timing.runData.throughCityLoop
                    if timing.runData.stopsViaFlindersFirst
                        span Via Flinders St, then City Loop
                    else
                        span Via City Loop, then Flinders St
                else
                    span Terminates at Flinders St

        div.timings
            -
                let headwayDevianceClass = 'unknown'

                if (timing.headwayDeviance >= 90) // >= 1.5min counts as early
                    headwayDevianceClass = 'early'
                else if (timing.headwayDeviance <= -300) // <= 5min counts as late
                    headwayDevianceClass = 'late'
                else if (timing.headwayDeviance !== null)
                    headwayDevianceClass = 'on-time'

            div(class='trainArrival ' + headwayDevianceClass)
                - let timeToArrival = getTimingsDifference(timing.arrivalTime, +new Date());
                if timeToArrival.minutes < 1
                    span='Arr' + (!!timing.runData.expressStopsCount ? ' *' : '')
                else
                    span=timeToArrival.minutes + (!!timing.runData.expressStopsCount ? ' *' : '')

                if timing.headwayDeviance && headwayDevianceClass !== 'on-time'
                    -
                        let minutes = Math.floor(Math.abs(timing.headwayDeviance) / 60);
                        let seconds = [0].concat([...(Math.abs(timing.headwayDeviance) % 60).toFixed(0)]).slice(-2).join('');

                    span=minutes + ':' + seconds

//- for platform in Object.keys(timings).sort((a, b) => a - b)
//-     - let lines = Object.keys(timings[platform]);
//-     for lineName in lines.sort((a, b) => a.length - b.length)
//-         - let destinations = timings[platform][lineName];
//-         for destinationName in Object.keys(destinations).sort((a, b) => a.length - b.length)
//-             - let departures = timings[platform][lineName][destinationName];
//- 
//-             div.trainService
//-                 span(class='trainPlatformData ' + lineName.toLowerCase().replace(/[ &]/g, '-').replace(/--+/g, '-') + '-line')
//-                     span Platform
//-                     span=platform
//- 
//-                 a(href=`/metro/timings/${destinationName.toLowerCase().replace(/ /g, '-')}`).destination
//-                     span=lineName + ' Line Towards'
//-                     span=destinationName
//- 
//-                 div.timings
//-                     for i in Array(4 - departures.slice(0, 4).length)
//-                         div.trainArrival(style='display: none')
//-                     for timing in departures.slice(0, 4)
//-                         -
//-                             let headwayDevianceClass = 'unknown'
//- 
//-                             if (timing.headwayDeviance > 90)
//-                                 headwayDevianceClass = 'early'
//-                             else if (timing.headwayDeviance < -90)
//-                                 headwayDevianceClass = 'late'
//-                             else if (timing.headwayDeviance !== null)
//-                                 headwayDevianceClass = 'on-time'
//- 
//-                         div(class='trainArrival ' + headwayDevianceClass)
//-                             - let timeToArrival = getTimingsDifference(timing.arrivalTime, +new Date());
//-                             if timeToArrival.minutes == 0
//-                                 span='Arr' + (timing.hasExpress ? ' *' : '')
//-                             else
//-                                 span=timeToArrival.minutes + (timing.hasExpress ? ' *' : '')
//- 
//-                             if Math.abs(timing.headwayDeviance) > 90
//-                                 -
//-                                     let minutes = Math.floor(Math.abs(timing.headwayDeviance) / 60);
//-                                     let seconds = [0].concat([...(Math.abs(timing.headwayDeviance) % 60).toFixed(0)]).slice(-2).join('');
//- 
//-                                 span=minutes + ':' + seconds
